worker_processes        2;
worker_cpu_affinity     01 10;
pcre_jit                on;
worker_priority         -5;
worker_rlimit_nofile    65535;
error_log               logs/error.log;
pid                     logs/nginx.pid;


events {
    use epoll;
    accept_mutex off;
    worker_connections 65535;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main    '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;
    # error_log   logs/debug.log   debug_http;

    sendfile            on;
    tcp_nopush          on;
    keepalive_timeout   65;

    gzip                on;
    gzip_buffers        8   16k;
    gzip_comp_level     6;
    gzip_min_length     1k;
    gzip_disable        "MSIE [1-6]\.";
    gzip_types          text/plain text/css application/json
                        application/x-javascript text/xml 
                        application/xml application/xml+rss 
                        text/javascript;
    gzip_vary           on; 

    upstream backend {
        least_conn;
        keepalive   16;
        server      localhost:8088;
    }

    server {
        listen          80;
        server_name     mtc;
        server_tokens   off;
        charset         utf-8;
        access_log      logs/host.access.log main;

        add_header X-Robots-Tag "noindex";
        add_header Author       "AGD & HRN & LWT & JCKeep";
       	
	    location / {
            if ($http_user_agent ~* "python|curl|java|wget|httpclient|okhttp") {
                return 503 "FUCK YOU, BITCH\n";
            }

            root html/file;
            index index.html;
            sub_filter 'Vite App' '木糖纯';
        }

        location /admin {
            rewrite ^/admin/(.*) http://114.132.226.110:8080/$1 permanent;
        }

        location ~ (css|js)$ {
            root html/file;
            expires max;
        }

        location ~ /api/mtc {
            proxy_pass         http://backend;
            proxy_http_version 1.1;
            # proxy_set_header   Connection      "";
            proxy_set_header   X-Real-IP       $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   Host            $http_host;
        }

        location ~ /file {
            autoindex            on;
            autoindex_exact_size off;
            root                 static;
        }

        location = /robots.txt {
            return 200 "User-agent: *\nDisallow: /\n";
        }

        location ~* "(base64_encode)(.*)(\()" {
            deny all;
        }

        location ~* "(eval\()" {
            deny all;
        }

        error_page 404 /index.html;

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root html;
        }
    }

    server {
        listen              8080;
        server_name         mtc_admin;
        server_tokens       off;
        charset             utf-8;
        access_log          logs/host.access.log  main;

        add_header          X-Robots-Tag "noindex";
        add_header Author   "FQY & JCKeep";
       	
	    location / {
            if ($http_user_agent ~* "python|curl|java|wget|httpclient|okhttp") {
                return 503 "FUCK YOU, BITCH\n";
            }

            root        html/admin;
            index       index.html;
            sub_filter  'Vite App' '木糖纯后台管理系统';
        }

        location ~ (css|js)$ {
            root    html/admin;
            expires max;
        }

        location = /robots.txt {
            return 200 "User-agent: *\nDisallow: /\n";
        }

        location ~* "(base64_encode)(.*)(\()" {
            deny all;
        }

        location ~* "(eval\()" {
            deny all;
        }

        error_page 404 /index.html;

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root html;
        }
    }

    # server {
    #     listen 443 ssl;
    #     server_name mtc_ssl;
    #     charset utf-8;

    #     ssl_certificate ssl/server.pem;
    #     ssl_certificate_key ssl/server.pem;

    #     location / {
    #         return 200 "Hello World";
    #     }
    # }
}
