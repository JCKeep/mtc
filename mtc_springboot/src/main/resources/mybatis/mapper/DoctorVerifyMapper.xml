<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mtc.mapper.DoctorVerifyMapper">
  <resultMap id="BaseResultMap" type="com.example.mtc.model.DoctorVerify">
    <id column="doctor_id" jdbcType="BIGINT" property="doctorId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="doctor_idnumber" jdbcType="CHAR" property="doctorIdnumber" />
    <result column="doctor_hospital" jdbcType="VARCHAR" property="doctorHospital" />
    <result column="verify_state" jdbcType="VARCHAR" property="verifyState" />
    <result column="admin_id" jdbcType="BIGINT" property="adminId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.mtc.model.DoctorVerify">
    <result column="doctor_qualification" jdbcType="LONGVARBINARY" property="doctorQualification" />
  </resultMap>
  <sql id="Base_Column_List">
    doctor_id, user_id, doctor_idnumber, doctor_hospital, verify_state, admin_id
  </sql>
  <sql id="Blob_Column_List">
    doctor_qualification
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_community_doctorverify
    where doctor_id = #{doctorId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_community_doctorverify
    where doctor_id = #{doctorId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.mtc.model.DoctorVerify">
    insert into t_community_doctorverify (doctor_id, user_id, doctor_idnumber, 
      doctor_hospital, verify_state, admin_id, 
      doctor_qualification)
    values (#{doctorId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{doctorIdnumber,jdbcType=CHAR}, 
      #{doctorHospital,jdbcType=VARCHAR}, #{verifyState,jdbcType=VARCHAR}, #{adminId,jdbcType=BIGINT}, 
      #{doctorQualification,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.example.mtc.model.DoctorVerify">
    insert into t_community_doctorverify
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="doctorIdnumber != null">
        doctor_idnumber,
      </if>
      <if test="doctorHospital != null">
        doctor_hospital,
      </if>
      <if test="verifyState != null">
        verify_state,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="doctorQualification != null">
        doctor_qualification,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="doctorId != null">
        #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="doctorIdnumber != null">
        #{doctorIdnumber,jdbcType=CHAR},
      </if>
      <if test="doctorHospital != null">
        #{doctorHospital,jdbcType=VARCHAR},
      </if>
      <if test="verifyState != null">
        #{verifyState,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=BIGINT},
      </if>
      <if test="doctorQualification != null">
        #{doctorQualification,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.mtc.model.DoctorVerify">
    update t_community_doctorverify
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="doctorIdnumber != null">
        doctor_idnumber = #{doctorIdnumber,jdbcType=CHAR},
      </if>
      <if test="doctorHospital != null">
        doctor_hospital = #{doctorHospital,jdbcType=VARCHAR},
      </if>
      <if test="verifyState != null">
        verify_state = #{verifyState,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=BIGINT},
      </if>
      <if test="doctorQualification != null">
        doctor_qualification = #{doctorQualification,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where doctor_id = #{doctorId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.mtc.model.DoctorVerify">
    update t_community_doctorverify
    set user_id = #{userId,jdbcType=BIGINT},
      doctor_idnumber = #{doctorIdnumber,jdbcType=CHAR},
      doctor_hospital = #{doctorHospital,jdbcType=VARCHAR},
      verify_state = #{verifyState,jdbcType=VARCHAR},
      admin_id = #{adminId,jdbcType=BIGINT},
      doctor_qualification = #{doctorQualification,jdbcType=LONGVARBINARY}
    where doctor_id = #{doctorId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.mtc.model.DoctorVerify">
    update t_community_doctorverify
    set user_id = #{userId,jdbcType=BIGINT},
      doctor_idnumber = #{doctorIdnumber,jdbcType=CHAR},
      doctor_hospital = #{doctorHospital,jdbcType=VARCHAR},
      verify_state = #{verifyState,jdbcType=VARCHAR},
      admin_id = #{adminId,jdbcType=BIGINT}
    where doctor_id = #{doctorId,jdbcType=BIGINT}
  </update>
</mapper>